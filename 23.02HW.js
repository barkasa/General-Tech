//1.Просмотр списка транзакций пользователя:

db.transactions.find({ user_id: 12345 });
//--------------------------------------------------------------------------

// 2.Просмотр баланса пользователя:

db.transactions.aggregate([
  { $match: { user_id: 12345 } },
  { $group: { _id: "$user_id", balance: { $sum: "$amount" } } },
]);
// В данном запросе мы сначала фильтруем транзакции по user_id,
// а затем с помощью оператора $group группируем транзакции по user_id и
// вычисляем сумму всех транзакций для данного пользователя,
// что и является его балансом.
//--------------------------------------------------------------------------

// 3.Перевод средств между пользователями:

db.transactions.insertMany([
  { user_id: 12345, amount: -50.5, transaction_date: new Date() },
  { user_id: 67890, amount: 50.5, transaction_date: new Date() },
]);
// В данном запросе мы вставляем две записи в коллекцию transactions,
// одну с отрицательной суммой для отправителя (пользователя с user_id 12345),
// а другую с положительной суммой для получателя (пользователя с user_id 67890).
//--------------------------------------------------------------------------

// 4.Отмена транзакции:

db.transactions.updateOne(
  { _id: ObjectId("616eeae1e4c4d4b9a4d5c5ab") },
  { $set: { status: "cancelled" } }
);
// В данном запросе мы обновляем запись с указанным идентификатором,
// устанавливая значение поля status на cancelled.
//--------------------------------------------------------------------------

// 5.Создание отчета по транзакциям:

db.transactions.aggregate([
  {
    $match: {
      transaction_date: {
        $gte: new Date("2023-02-01"),
        $lt: new Date("2023-03-01"),
      },
    },
  },
  {
    $group: {
      _id: {
        year: { $year: "$transaction_date" },
        month: { $month: "$transaction_date" },
      },
      total: { $sum: "$amount" },
    },
  },
  { $sort: { "_id.year": 1, "_id.month": 1 } },
]);

// Данный запрос создает отчет по транзакциям за февраль 2023 года.

// Запрос используем оператор агрегации $match для фильтрации только тех документов,
// у которых поле transaction_date находится в пределах февраля 2023 года.
// Затем, $group сгруппирует документы по году и месяцу транзакции
// (_id: { year: { $year: '$transaction_date' },
// month: { $month: '$transaction_date' } })
// и вычисляем общую сумму транзакций за каждый месяц
// (total: { $sum: '$amount' }).
// Наконец, $sort отсортирует результаты по возрастанию года и месяца.
